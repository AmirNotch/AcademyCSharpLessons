Многопоточность
Тут случае речь о нескольких потоках, в которых исполнение задач идет одновременно и независимо друг от друга.

Использование нескольких потоков выполнения — один из способов гарантировать вероятность
реагирования приложения на действия пользователя при синхронном использовании процессора
для выполнения задач между появлением или даже во время явления событий пользователя.


Характеристики асинхронного кода:

обрабатывает больше запросов сервера, предоставляя потокам возможность обрабатывать
больше запросов во время ожидания итога от запросов ввода-вывода;
делает пользовательский интерфейс быстрым, выделяя потоки для обработки операций в
пользовательском интерфейсе во время ожидания запросов ввода-вывода, передавая затратные
по времени операции другим ядрам ЦП.

Ключевые слова для работы с Ассинхроными методами это
async — применяется в заголовке метода;
await — вызывающий метод охватывает одно или несколько таких выражений.


Параллельное программирование

Вероятно, самым главным среди новых средств, внедренных в версию 4. 0 среды . NET,
является библиотека распараллеливания задач (TPL).
Эта библиотека усовершенствует многопоточное программирование двумя основными способами.
Во-первых, она упрощает создание и применение многих потоков. И во-вторых, она позволяет автоматически пользоваться несколько процессоров.
Иными словами, TPL открывает возможности для автоматического масштабирования приложений с целью лучшего использования ряда общедоступных процессоров.

Благодаря данным двум особенностям библиотеки TPL она рекомендуется в большинстве случаев к использованию для компании многопоточной обработки.

